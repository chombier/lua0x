* Introduction

  =Lua0x= is a very simple c++11 library for registering c++ lambdas
  under a lua module (see the example below). It is intended to be
  small, thus easily copy-pasta'd where needed.

* Requirements
  
  The basic dependencies are lua 5.1 and luabind. A decent c++11
  compiler is also needed (=auto=, lambdas and template aliases are
  needed). The following command should take care of the dependencies
  under Debian/Ubuntu:

: sudo apt-get install lua5.1 libluabind-dev
  
  Have a look at =lua0x.pro= can be tweaked to build as a library or an example
  executable.


* Example

Taken from =main.cpp=:

#+BEGIN_SRC CPP
#include "module.h"
#include "state.h"

int main(int, char** ) {

  // lua state wrapper
  lua::state state;

  // init stuff and declare a global lua module 'cxx'
  lua::module::init( state, "cxx" );
  
  // declare a lua module under global name 'test'
  lua::module test("test");

  // binds a c++11 lambda as test.echo
  test("echo", [](const std::string& name) { 
      std::cout << name << std::endl; 
    });
  
  // register test module in lua
  state.string("cxx.load('test')");
  
  // calls test.echo
  state.string("test.echo('lolwat')");
  
  return 0;
}
#+END_SRC


* License

  LGPL 2.1

  
